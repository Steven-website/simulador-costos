#!/usr/bin/env python
# coding: utf-8

# In[3]:

import streamlit as st
import pandas as pd
import requests

# -----------------------------
# CONFIGURACI√ìN DE LA P√ÅGINA
# -----------------------------
st.set_page_config(page_title="Simulador por Categor√≠a", layout="centered")
st.title("üßÆ Simulador de Costo de Importaci√≥n (Yuan ‚Üí Col√≥n)")

# -----------------------------
# CARGA DE DATOS DESDE EL ARCHIVO EN GITHUB
# -----------------------------
@st.cache_data
def cargar_datos():
    try:
        df = pd.read_excel("Simulador.xlsx")
        df.columns = df.columns.str.strip()  # Limpia espacios en columnas
        return df
    except Exception as e:
        st.error(f"‚ùå Error al cargar el archivo Excel: {e}")
        return pd.DataFrame()  # Devuelve DataFrame vac√≠o en caso de error

df = cargar_datos()

# -----------------------------
# OBTENER TIPO DE CAMBIO
# -----------------------------
@st.cache_data
def obtener_tipo_cambio():
    try:
        url = "https://open.er-api.com/v6/latest/CNY"
        response = requests.get(url, timeout=10)
        data = response.json()
        if data.get("result") == "success":
            return data["rates"]["CRC"]
    except:
        pass
    return 75.5  # Valor por defecto

tipo_cambio = obtener_tipo_cambio()
st.write(f"üí± Tipo de cambio actual: ¬•1 = ‚Ç°{tipo_cambio:.2f}")

# -----------------------------
# BOT√ìN REFRESCAR P√ÅGINA
# -----------------------------
if st.button("üîÑ Refrescar p√°gina"):
    st.cache_data.clear()
    st.experimental_rerun()

# -----------------------------
# FILTRO: SOLO FAMILIA (pa√≠s eliminado)
# -----------------------------
if df.empty:
    st.stop()

st.subheader("Filtro")
familias = df["FAMILIA"].dropna().unique()
familia = st.selectbox("üè∑Ô∏è Familia", sorted(familias))

# -----------------------------
# INGRESO DEL PRECIO EN YUANES
# -----------------------------
precio_yuan = st.number_input("üí∞ Precio en Yuanes (¬•)", min_value=0.0, step=0.01)

# -----------------------------
# C√ÅLCULO Y TABLA DE RESULTADOS
# -----------------------------
if precio_yuan > 0 and familia:
    resultados = df[df["FAMILIA"] == familia].copy()
    resultados["Precio Colones"] = precio_yuan * tipo_cambio
    resultados["Precio Final Estimado"] = resultados["Precio Colones"] * resultados["Factor_Importaci√≥n"]

    st.markdown("### üìä Resultados por Categor√≠a")
    st.dataframe(
        resultados[["CATEGORIA", "Factor_Importaci√≥n", "Precio Final Estimado"]]
        .sort_values(by="Precio Final Estimado", ascending=False)
        .rename(columns={
            "CATEGORIA": "Categor√≠a",
            "Factor_Importaci√≥n": "Factor de Importaci√≥n",
            "Precio Final Estimado": "‚Ç° Precio Final Estimado"
        }),
        use_container_width=True
    )


# In[ ]:




